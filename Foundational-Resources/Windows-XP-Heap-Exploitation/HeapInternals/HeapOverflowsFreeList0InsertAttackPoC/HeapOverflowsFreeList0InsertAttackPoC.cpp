// HeapOverflowsFreeList0InsertAttack.cpp : Defines the entry point for the console application.
//
#define _CRT_SECURE_NO_WARNINGS

#include "stdafx.h"
#include <stdio.h>
#include <windows.h>
int main(int argc,char *argv[])
{
    HLOCAL a,b,c,d,e;
    HANDLE hHeap;

    hHeap = HeapCreate(0x00040000,0,0);
    printf ("hHeap == 0x%p\n", hHeap);
	char buf[1000];
	gets(buf);

    a = HeapAlloc(hHeap,0x00000008,0x500);
    b = HeapAlloc(hHeap,0x00000008,0x600);
	c = HeapAlloc(hHeap,0x00000008,0x700);
    printf ("Allocated:\n  a == 0x%p\n  b == 0x%p\n  c == 0x%p\n", a, b, c);

	__asm { int 0x3 };

    HeapFree(hHeap, 0, c);

    char str1[0x1000];
	gets(str1);
    memcpy (b, str1, strlen(str1));

	HeapFree(hHeap, 0, a);

    // Pop valid chunk from the list
    d = HeapAlloc(hHeap,0x00000008,0x500);

	printf ("Allocated:\n  d == 0x%p\n  e == 0x%p\n", d, e);

    // Return arbitrary pointer
    e = HeapAlloc(hHeap,0x00000008,0x500);

    printf ("Allocated:\n  d == 0x%p\n  e == 0x%p\n", d, e);
}

